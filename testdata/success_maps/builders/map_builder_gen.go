// Code generated by go-builder-generator (https://github.com/kilianpaquier/go-builder-generator). DO NOT EDIT.

package builders

import (
	"context"

	"github.com/kilianpaquier/go-builder-generator/testdata/success_maps"
)

// MapBuilder is an alias of Map to build Map with builder-pattern.
type MapBuilder success_maps.Map

// NewMapBuilder creates a new MapBuilder.
func NewMapBuilder() *MapBuilder {
	return &MapBuilder{}
}

// Copy reassigns the builder struct (behind pointer) to a new pointer and returns it.
func (b *MapBuilder) Copy() *MapBuilder {
	result := *b
	return &result
}

// Build returns built Map.
func (b *MapBuilder) Build() *success_maps.Map {

	result := (success_maps.Map)(*b)
	return &result
}

// SetMapField sets Map's MapField.
func (b *MapBuilder) SetMapField(mapField map[int64]string) *MapBuilder {
	b.MapField = mapField
	return b
}

// SetMapFieldAlias sets Map's MapFieldAlias.
func (b *MapBuilder) SetMapFieldAlias(mapFieldAlias map[success_maps.Int64Alias]success_maps.FuncAlias) *MapBuilder {
	b.MapFieldAlias = mapFieldAlias
	return b
}

// SetMapFieldFunc sets Map's MapFieldFunc.
func (b *MapBuilder) SetMapFieldFunc(mapFieldFunc map[int64]func(in int64) error) *MapBuilder {
	b.MapFieldFunc = mapFieldFunc
	return b
}

// SetMapFieldPtrAlias sets Map's MapFieldPtrAlias.
func (b *MapBuilder) SetMapFieldPtrAlias(mapFieldPtrAlias map[*success_maps.Int64Alias]*success_maps.FuncAlias) *MapBuilder {
	b.MapFieldPtrAlias = &mapFieldPtrAlias
	return b
}

// SetMapFieldWithPkg sets Map's MapFieldWithPkg.
func (b *MapBuilder) SetMapFieldWithPkg(mapFieldWithPkg map[int64]context.Context) *MapBuilder {
	b.MapFieldWithPkg = mapFieldWithPkg
	return b
}

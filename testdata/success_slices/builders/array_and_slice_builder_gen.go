// Code generated by go-builder-generator (https://github.com/kilianpaquier/go-builder-generator). DO NOT EDIT.

package builders

import (
	"context"

	"github.com/kilianpaquier/go-builder-generator/testdata/success_slices"
)

// ArrayAndSliceBuilder is an alias of ArrayAndSlice to build ArrayAndSlice with builder-pattern.
type ArrayAndSliceBuilder success_slices.ArrayAndSlice

// NewArrayAndSliceBuilder creates a new ArrayAndSliceBuilder.
func NewArrayAndSliceBuilder() *ArrayAndSliceBuilder {
	return &ArrayAndSliceBuilder{}
}

// Copy reassigns the builder struct (behind pointer) to a new pointer and returns it.
func (b *ArrayAndSliceBuilder) Copy() *ArrayAndSliceBuilder {
	c := *b
	return &c
}

// Build returns built ArrayAndSlice.
func (b *ArrayAndSliceBuilder) Build() *success_slices.ArrayAndSlice {
	c := (success_slices.ArrayAndSlice)(*b)
	return &c
}

// SetArrayField sets ArrayAndSlice's ArrayField.
func (b *ArrayAndSliceBuilder) SetArrayField(arrayField [10]int64) *ArrayAndSliceBuilder {
	b.ArrayField = arrayField
	return b
}

// SetArrayFieldAlias sets ArrayAndSlice's ArrayFieldAlias.
func (b *ArrayAndSliceBuilder) SetArrayFieldAlias(arrayFieldAlias [10]success_slices.Int64Alias) *ArrayAndSliceBuilder {
	b.ArrayFieldAlias = arrayFieldAlias
	return b
}

// SetArrayFieldPtrAlias sets ArrayAndSlice's ArrayFieldPtrAlias.
func (b *ArrayAndSliceBuilder) SetArrayFieldPtrAlias(arrayFieldPtrAlias [10]*success_slices.Int64Alias) *ArrayAndSliceBuilder {
	b.ArrayFieldPtrAlias = &arrayFieldPtrAlias
	return b
}

// SetArrayFieldWithPkg sets ArrayAndSlice's ArrayFieldWithPkg.
func (b *ArrayAndSliceBuilder) SetArrayFieldWithPkg(arrayFieldWithPkg [10]context.Context) *ArrayAndSliceBuilder {
	b.ArrayFieldWithPkg = arrayFieldWithPkg
	return b
}

// SetSliceField sets ArrayAndSlice's SliceField.
func (b *ArrayAndSliceBuilder) SetSliceField(sliceField []int64) *ArrayAndSliceBuilder {
	b.SliceField = sliceField
	return b
}

// SetSliceFieldAlias sets ArrayAndSlice's SliceFieldAlias.
func (b *ArrayAndSliceBuilder) SetSliceFieldAlias(sliceFieldAlias []success_slices.Int64Alias) *ArrayAndSliceBuilder {
	b.SliceFieldAlias = sliceFieldAlias
	return b
}

// SetSliceFieldAliasChan sets ArrayAndSlice's SliceFieldAliasChan.
func (b *ArrayAndSliceBuilder) SetSliceFieldAliasChan(sliceFieldAliasChan []chan<- success_slices.Int64Alias) *ArrayAndSliceBuilder {
	b.SliceFieldAliasChan = sliceFieldAliasChan
	return b
}

// SetSliceFieldPtrAlias sets ArrayAndSlice's SliceFieldPtrAlias.
func (b *ArrayAndSliceBuilder) SetSliceFieldPtrAlias(sliceFieldPtrAlias []*success_slices.Int64Alias) *ArrayAndSliceBuilder {
	b.SliceFieldPtrAlias = &sliceFieldPtrAlias
	return b
}

// SetSliceFieldWithPkg sets ArrayAndSlice's SliceFieldWithPkg.
func (b *ArrayAndSliceBuilder) SetSliceFieldWithPkg(sliceFieldWithPkg []context.Context) *ArrayAndSliceBuilder {
	b.SliceFieldWithPkg = sliceFieldWithPkg
	return b
}

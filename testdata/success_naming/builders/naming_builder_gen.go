// Code generated by go-builder-generator (https://github.com/kilianpaquier/go-builder-generator). DO NOT EDIT.

package builders

import (
	net_http "net/http"
	"net/url"

	"github.com/kilianpaquier/go-builder-generator/testdata/success_naming"
)

// NamingBuilder is an alias of Naming to build Naming with builder-pattern.
type NamingBuilder success_naming.Naming

// NewNamingBuilder creates a new NamingBuilder.
func NewNamingBuilder() *NamingBuilder {
	return &NamingBuilder{}
}

// Copy reassigns the builder struct (behind pointer) to a new pointer and returns it.
func (b *NamingBuilder) Copy() *NamingBuilder {
	result := *b
	return &result
}

// Build returns built Naming.
func (b *NamingBuilder) Build() *success_naming.Naming {

	result := (success_naming.Naming)(*b)
	return &result
}

// SetACRONYMOUS sets Naming's ACRONYMOUS.
func (b *NamingBuilder) SetACRONYMOUS(acronymous string) *NamingBuilder {
	b.ACRONYMOUS = acronymous
	return b
}

// SetAnotherACRONYMOUS sets Naming's AnotherACRONYMOUS.
func (b *NamingBuilder) SetAnotherACRONYMOUS(anotherACRONYMOUS string) *NamingBuilder {
	b.AnotherACRONYMOUS = anotherACRONYMOUS
	return b
}

// SetAnURL sets Naming's AnURL.
func (b *NamingBuilder) SetAnURL(anURL url.URL) *NamingBuilder {
	b.AnURL = &anURL
	return b
}

// SetID sets Naming's ID.
func (b *NamingBuilder) SetID(id int64) *NamingBuilder {
	b.ID = id
	return b
}

// SetSomeClientHTTP sets Naming's SomeClientHTTP.
func (b *NamingBuilder) SetSomeClientHTTP(someClientHTTP net_http.Client) *NamingBuilder {
	b.SomeClientHTTP = &someClientHTTP
	return b
}

// SetSomeID sets Naming's SomeID.
func (b *NamingBuilder) SetSomeID(someID int64) *NamingBuilder {
	b.SomeID = someID
	return b
}

// SetURL sets Naming's URL.
func (b *NamingBuilder) SetURL(url url.URL) *NamingBuilder {
	b.URL = &url
	return b
}
